[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Thibaut Lamadon Bradley Setzler Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/Numerics.html","id":"rounding","dir":"Articles","previous_headings":"","what":"1. Rounding","title":"Numerics","text":"Numeric row rounded second decimal place: Entry-specific rounding:","code":"vec <- c(1.0, 1.01, 1.001) TexRow(vec, dec = 2) #> % created using textab on Sun Mar 26 18:47:03 2023 #> \\begin{tabular}{rrr} #> 1.00 & 1.01 & 1.00 \\\\ #> \\end{tabular} vec <- c(1.0, 1.01, 1.001) TexRow(vec, dec = c(2,4,6)) #> % created using textab on Sun Mar 26 18:47:03 2023 #> \\begin{tabular}{rrr} #> 1.00 & 1.0100 & 1.001000 \\\\ #> \\end{tabular}"},{"path":"/articles/Numerics.html","id":"percentage","dir":"Articles","previous_headings":"","what":"2. Percentage","title":"Numerics","text":"Numeric row numbers percentages: entries percentages:","code":"vec <- c(20,30,40) TexRow(vec, dec = 0, percentage = TRUE) #> % created using textab on Sun Mar 26 18:47:03 2023 #> \\begin{tabular}{rrr} #> 20\\% & 30\\% & 40\\% \\\\ #> \\end{tabular} vec <- c(2.4344, 40.12) TexRow(vec, dec = c(2,1), percentage = c(FALSE, TRUE)) #> % created using textab on Sun Mar 26 18:47:03 2023 #> \\begin{tabular}{rr} #> 2.43 & 40.1\\% \\\\ #> \\end{tabular}"},{"path":"/articles/Numerics.html","id":"dollar-sign","dir":"Articles","previous_headings":"","what":"3. Dollar Sign","title":"Numerics","text":"Numeric row numbers dollars: entries dollars:","code":"vec <- c(20.32,30.67,40.98) TexRow(vec, dec = 2, dollar = TRUE) #> % created using textab on Sun Mar 26 18:47:03 2023 #> \\begin{tabular}{rrr} #> \\$20.32 & \\$30.67 & \\$40.98 \\\\ #> \\end{tabular} vec <- c(2.4344, 40.12) TexRow(vec, dec = c(2,1), percentage = c(FALSE, TRUE), dollar = c(TRUE, FALSE)) #> % created using textab on Sun Mar 26 18:47:03 2023 #> \\begin{tabular}{rr} #> \\$2.43 & 40.1\\% \\\\ #> \\end{tabular}"},{"path":"/articles/Numerics.html","id":"standard-error","dir":"Articles","previous_headings":"","what":"4. Standard Error","title":"Numerics","text":"Numeric row numbers standard errors: entries standard errors:","code":"vec <- c(20.32,30.67,40.98) TexRow(vec, dec = 2, se = TRUE) #> % created using textab on Sun Mar 26 18:47:03 2023 #> \\begin{tabular}{rrr} #> (20.32) & (30.67) & (40.98) \\\\ #> \\end{tabular} vec <- c(2.4344, 0.3815) TexRow(vec, dec = 3, se = c(FALSE, TRUE)) #> % created using textab on Sun Mar 26 18:47:03 2023 #> \\begin{tabular}{rr} #> 2.434 & (0.382) \\\\ #> \\end{tabular}"},{"path":"/articles/Numerics.html","id":"p-values","dir":"Articles","previous_headings":"","what":"5. p-values","title":"Numerics","text":"Infer p-value numeric vector: p < 0.1 gives 1 star p < 0.05 gives 2 stars p < 0.01 gives 3 stars","code":"vec <- c(1,2,3) TexRow(vec, dec = 2, pvalues = c(0.09, 0.04, 0.009)) #> % created using textab on Sun Mar 26 18:47:04 2023 #> \\begin{tabular}{rrr} #> 1.00* & 2.00** & 3.00*** \\\\ #> \\end{tabular}"},{"path":"/articles/textab.html","id":"installation","dir":"Articles","previous_headings":"","what":"0. Installation","title":"textab","text":"install package CRAN: install package Github: use package installed:","code":"install.packages(\"textab\") devtools::install_github(\"setzler/textab\") library(textab)"},{"path":"/articles/textab.html","id":"character-rows","dir":"Articles","previous_headings":"","what":"1. Character rows","title":"textab","text":"Basic character row: Character row LaTeX formatting: Note: Double backslashes required LaTeX commands.","code":"vec = c(\"hello\", \"world\") TexRow(vec) #> % created using textab on Sun Mar 26 18:47:05 2023 #> \\begin{tabular}{rr} #> hello & world \\\\ #> \\end{tabular} vec = c('Hello','\\\\textbf{World}','$\\\\alpha$','$\\\\frac{1}{2}$') TexRow(vec) #> % created using textab on Sun Mar 26 18:47:05 2023 #> \\begin{tabular}{rrrr} #> Hello & \\textbf{World} & $\\alpha$ & $\\frac{1}{2}$ \\\\ #> \\end{tabular}"},{"path":"/articles/textab.html","id":"numeric-rows","dir":"Articles","previous_headings":"","what":"2. Numeric rows","title":"textab","text":"Basic numeric row: Numeric row rounded second decimal place: four arguments specific numeric rows: percentage: TRUE, add “%” sign number. dollar: TRUE, add “$” sign number. se: TRUE, surround number parentheses. pvalues: provided, numbers used add stars “*” numbers. See article formatting numbers.","code":"vec <- c(1.0, 1.01, 1.001) TexRow(vec) #> % created using textab on Sun Mar 26 18:47:05 2023 #> \\begin{tabular}{rrr} #> 1.000 & 1.010 & 1.001 \\\\ #> \\end{tabular} vec <- c(1.0, 1.01, 1.001) TexRow(vec, dec = 2) #> % created using textab on Sun Mar 26 18:47:05 2023 #> \\begin{tabular}{rrr} #> 1.00 & 1.01 & 1.00 \\\\ #> \\end{tabular}"},{"path":"/articles/textab.html","id":"custom-formatting-using-surround","dir":"Articles","previous_headings":"","what":"3. Custom Formatting using Surround","title":"textab","text":"many common formatting options explicitly provided TexRow, also include surround argument user can specify custom formatting. surround argument allows provide raw LaTeX code. Place %s symbol wherever number character placed. Suppose wish make number red. LaTeX, can make number red using code {\\color{red} %s}, %s indicates number go. order make number red, specify following: Note: Double backslashes required LaTeX commands. surround argument works character vectors well, can apply different formatting value:","code":"vec = c(5.081, 2.345, 6.789) TexRow(vec, dec = 1, surround = \"{\\\\color{red} %s}\") #> % created using textab on Sun Mar 26 18:47:05 2023 #> \\begin{tabular}{rrr} #> {\\color{red} 5.1} & {\\color{red} 2.3} & {\\color{red} 6.8} \\\\ #> \\end{tabular} vec = c(\"hello\", \"world\") TexRow(vec, dec = 1, surround = c(\"{\\\\color{blue} %s}\", \"$\\\\frac{\\\\text{%s}}{2}$\")) #> % created using textab on Sun Mar 26 18:47:05 2023 #> \\begin{tabular}{rr} #> {\\color{blue} hello} & $\\frac{\\text{world}}{2}$ \\\\ #> \\end{tabular}"},{"path":"/articles/textab.html","id":"multicolumn-rows","dir":"Articles","previous_headings":"","what":"4. Multicolumn Rows","title":"textab","text":"Merge center second third rows using cspan argument: Merge left-align second third rows using position argument: Two multi-column rows, first two-column left-aligned second three-column right-aligned:","code":"vec = c(\"hello\", \"world\") TexRow(vec, cspan = c(1,2)) #> % created using textab on Sun Mar 26 18:47:05 2023 #> \\begin{tabular}{rr} #> hello & \\multicolumn{2}{r}{world} \\\\ #> \\end{tabular} vec = c(\"hello\", \"world\") TexRow(vec, cspan = c(1,2), position = \"l\") #> % created using textab on Sun Mar 26 18:47:05 2023 #> \\begin{tabular}{rr} #> hello & \\multicolumn{2}{l}{world} \\\\ #> \\end{tabular} vec = c(\"hello\", \"world\") TexRow(vec, cspan = c(2,3), position = c(\"l\",\"r\")) #> % created using textab on Sun Mar 26 18:47:05 2023 #> \\begin{tabular}{rr} #> \\multicolumn{2}{l}{hello} & \\multicolumn{3}{r}{world} \\\\ #> \\end{tabular}"},{"path":[]},{"path":"/articles/textab.html","id":"combine-rows-side-by-side","dir":"Articles","previous_headings":"5. Combine Rows","what":"Combine Rows Side-by-side","title":"textab","text":"slash sign / combines rows side--side:","code":"first_block = TexRow(c(\"hello\", \"world\")) second_block = TexRow(c(\"$\\\\alpha$\",\"$\\\\frac{1}{2}$\")) combined_row = first_block / second_block combined_row #> % created using textab on Sun Mar 26 18:47:05 2023 #> \\begin{tabular}{rrrr} #> hello & world & $\\alpha$ & $\\frac{1}{2}$ \\\\ #> \\end{tabular}"},{"path":"/articles/textab.html","id":"stack-rows-vertically","dir":"Articles","previous_headings":"5. Combine Rows","what":"Stack Rows Vertically","title":"textab","text":"plus sign + stacks rows vertically:","code":"first_block = TexRow(c(\"hello\", \"world\")) second_block = TexRow(c(\"$\\\\alpha$\",\"$\\\\frac{1}{2}$\")) combined_row = first_block + second_block combined_row #> % created using textab on Sun Mar 26 18:47:05 2023 #> \\begin{tabular}{rr} #> hello & world \\\\ #> $\\alpha$ & $\\frac{1}{2}$ \\\\ #> \\end{tabular}"},{"path":"/articles/textab.html","id":"order-of-operations-horizontal-comes-first","dir":"Articles","previous_headings":"5. Combine Rows","what":"Order of Operations: Horizontal Comes First","title":"textab","text":"using horizontal vertical concatenation line, horizontal concatenation performed first:","code":"first_block = TexRow(c(\"hello\", \"world\")) second_block = TexRow(c(\"$\\\\alpha$\")) third_block = TexRow(c(\"$\\\\frac{1}{2}$\")) combined_row = first_block + second_block / third_block combined_row #> % created using textab on Sun Mar 26 18:47:05 2023 #> \\begin{tabular}{rr} #> hello & world \\\\ #> $\\alpha$ & $\\frac{1}{2}$ \\\\ #> \\end{tabular}"},{"path":"/articles/textab.html","id":"vertical-space-between-rows","dir":"Articles","previous_headings":"","what":"6. Vertical Space between Rows","title":"textab","text":"add 3pt space two rows:","code":"TexRow(c(\"hello\", \"world\"), space=3) +   TexRow(c('$\\\\alpha$','$\\\\frac{1}{2}$')) #> % created using textab on Sun Mar 26 18:47:05 2023 #> \\begin{tabular}{rr} #> hello & world \\\\[3pt] #> $\\alpha$ & $\\frac{1}{2}$ \\\\ #> \\end{tabular}"},{"path":"/articles/textab.html","id":"midrule-and-partial-midrules","dir":"Articles","previous_headings":"","what":"7. Midrule and Partial Midrules","title":"textab","text":"Add full midrule two rows: Add two partial midrules:","code":"TexRow(c(\"hello\", \"world\"), cspan=c(1,2)) +    TexMidrule() +   TexRow(c('$\\\\alpha$','$\\\\frac{1}{2}$','$\\\\sqrt{\\\\frac{2}{3}}$')) #> % created using textab on Sun Mar 26 18:47:05 2023 #> \\begin{tabular}{rrr} #> hello & \\multicolumn{2}{r}{world} \\\\ #> \\midrule  #> $\\alpha$ & $\\frac{1}{2}$ & $\\sqrt{\\frac{2}{3}}$ \\\\ #> \\end{tabular} TexRow(c(\"hello\", \"world\"), cspan=c(1,2)) +    TexMidrule(list(c(1,1), c(2,3))) +   TexRow(c('$\\\\alpha$','$\\\\frac{1}{2}$','$\\\\sqrt{\\\\frac{2}{3}}$')) #> % created using textab on Sun Mar 26 18:47:05 2023 #> \\begin{tabular}{rrr} #> hello & \\multicolumn{2}{r}{world} \\\\ #>  \\cmidrule(lr){1-1} \\cmidrule(lr){2-3}  #> $\\alpha$ & $\\frac{1}{2}$ & $\\sqrt{\\frac{2}{3}}$ \\\\ #> \\end{tabular}"},{"path":"/articles/textab.html","id":"save-a-latex-table-in--tex-format","dir":"Articles","previous_headings":"","what":"8. Save a LaTeX table in .tex format","title":"textab","text":"Let us work following table: Save simple .tex document containing table: Save stand-alone .tex document compiled, begin-document end-document statements well import statements common LaTeX packages: Note: examples saved table temporary directory, tempdir(). practice, likely want save table permanent directory. provide output_path, table saved current working directory, getwd().","code":"tt = TexRow(c(\"hello\", \"world\"), cspan=c(1,2), surround = c(\"{\\\\color{red} %s}\", \"{\\\\color{blue} %s}\")) +    TexMidrule(list(c(1,1), c(2,3))) +   TexRow(c('$\\\\alpha$','$\\\\frac{1}{2}$','$\\\\sqrt{\\\\frac{2}{3}}$')) TexSave(tab = tt, positions = c(\"l\",\"c\",\"c\"),          filename = \"example1\", output_path = tempdir()) TexSave(tab = tt, positions = c(\"l\",\"c\",\"c\"),          filename = \"example2\", output_path = tempdir(),          stand_alone = TRUE)"},{"path":"/articles/textab.html","id":"save-latex-table-and-compile-to-pdf","dir":"Articles","previous_headings":"","what":"9. Save LaTeX Table and Compile to PDF","title":"textab","text":"Produce compile stand-alone .tex document .pdf: final command produce PDF similar .","code":"TexSave(tab = tt, positions = c(\"l\",\"c\",\"c\"),          filename = \"example3\", output_path = tempdir(),          stand_alone = TRUE, compile_tex = TRUE)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thibaut Lamadon. Author, copyright holder. Bradley Setzler. Author, maintainer, copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lamadon T, Setzler B (2023). textab: Create Highly-Customized 'LaTeX' Tables. R package version 1.0, https://setzler.github.io/textab/.","code":"@Manual{,   title = {textab: Create Highly-Customized 'LaTeX' Tables},   author = {Thibaut Lamadon and Bradley Setzler},   year = {2023},   note = {R package version 1.0},   url = {https://setzler.github.io/textab/}, }"},{"path":"/index.html","id":"textab-create-highly-customized-latex-tables-in-r","dir":"","previous_headings":"","what":"Create Highly-Customized LaTeX Tables","title":"Create Highly-Customized LaTeX Tables","text":"Created Thibaut Lamadon Bradley Setzler textab package produces highly-customized LaTeX tables R. three functions package: TexRow: Form row LaTeX tabular environment. TexSave: Save tabular .tex file, optionally compile PDF. TexMidrule: Insert midrule, list partial midrules, rows LaTeX tabular environment. package builds LaTeX tables blocks, spirit ggplot2, using + / operators concatenation. plus sign (+): Stack rows vertically (forming multiple rows). slash sign (/): Combine rows side--side (forming wider row). install package CRAN: install package Github: use package installed: get started, read following articles: Get Started Function Documentation Formatting Numbers","code":"install.packages(\"textab\") devtools::install_github(\"setzler/textab\") library(textab)"},{"path":"/reference/TexMidrule.html","id":null,"dir":"Reference","previous_headings":"","what":"Create one (or many) partial midrule(s). — TexMidrule","title":"Create one (or many) partial midrule(s). — TexMidrule","text":"Create one (many) partial midrule(s).","code":""},{"path":"/reference/TexMidrule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create one (or many) partial midrule(s). — TexMidrule","text":"","code":"TexMidrule(rule_list = NULL)"},{"path":"/reference/TexMidrule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create one (or many) partial midrule(s). — TexMidrule","text":"rule_list (list). list integer vectors. integer vector must contain two integers indicate start end column partial midrule. rule_list = NULL, returns full midrule across columns. default rule_list = NULL.","code":""},{"path":"/reference/TexMidrule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create one (or many) partial midrule(s). — TexMidrule","text":"output textab block. block can entire row, part row, LaTeX tabular. block can concatenated horizontally another block using minus sign (-) stacked vertically another block using plus sign (+).","code":""},{"path":"/reference/TexMidrule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create one (or many) partial midrule(s). — TexMidrule","text":"","code":"# set up two textab blocks: block1 = TexRow(c(\"hello\",\"world\",\"block\")) block2 = TexRow(c(5.081, 2.345, 6.789), dec=1)  # add a full midrule between the two blocks block1 + TexMidrule() + block2 #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{rrr} #> hello & world & block \\\\ #> \\midrule  #> 5.1 & 2.3 & 6.8 \\\\ #> \\end{tabular}  # add a partial midrule to the first column and spanning the second-third columns: block1 + TexMidrule(list(c(1,1), c(2,3))) + block2 #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{rrr} #> hello & world & block \\\\ #>  \\cmidrule(lr){1-1} \\cmidrule(lr){2-3}  #> 5.1 & 2.3 & 6.8 \\\\ #> \\end{tabular}"},{"path":"/reference/TexRow.html","id":null,"dir":"Reference","previous_headings":"","what":"This function creates a row of a LaTeX table. — TexRow","title":"This function creates a row of a LaTeX table. — TexRow","text":"function creates row LaTeX table.","code":""},{"path":"/reference/TexRow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function creates a row of a LaTeX table. — TexRow","text":"","code":"TexRow(   value,   cspan = rep(1, length(value)),   position = \"r\",   surround = \"%s\",   space = 0,   dec = 3,   percentage = FALSE,   dollar = FALSE,   se = FALSE,   pvalues = NULL )"},{"path":"/reference/TexRow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function creates a row of a LaTeX table. — TexRow","text":"value value(s) formatted. Must numeric character vector. cspan (integer). greater 1, multicolumn{cspan}{position}{value} used. example, cspan=c(1,2,1) means second entry value span 2 columns. Default cspan = rep(1, length(value)). position (character). cspan > 1, multicolumn{cspan}{position}{value} used. example, position=c(\"l\",\"c\",\"r\") means second entry value centered. Default \"r\". surround (character). applied value sprintf(surround, value), surround must contain \"%s\" placeholder. Default \"%s\". space (numeric). number points (pt) vertical space append end row. Default 0. dec (integer). relevant value numeric. Number decimal places. scalar, decimal used entry value. vector, must length value. Default 3. percentage (logical). relevant value numeric. TRUE, percentage symbol \"%\" added end entry value. scalar, used entries value. vector, must length value. dollar (logical). relevant value numeric. TRUE, dollar sign \"$\" added end entry value. scalar, used entries value. vector, must length value. se (logical). relevant value numeric. TRUE, value wrapped parentheses. scalar, used entries value. vector, must length value. pvalues (numeric). relevant value numeric. NULL, must numeric. less 0.1, star added end entry value. less 0.05, second star appended. less 0.01, third star  appended. scalar, p-value assumed entries value. vector, must length value.","code":""},{"path":"/reference/TexRow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function creates a row of a LaTeX table. — TexRow","text":"output textab block. block can entire row, part row, LaTeX tabular. block can concatenated horizontally another block using minus sign (-) stacked vertically another block using plus sign (+).","code":""},{"path":"/reference/TexRow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function creates a row of a LaTeX table. — TexRow","text":"","code":"# basic character row: vec = c(\"hello\", \"world\") TexRow(vec) #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{rr} #> hello & world \\\\ #> \\end{tabular}  # character row with LaTeX formatting: vec = c('Hello','\\\\textbf{World}','$\\\\alpha$','$\\\\frac{1}{2}$') TexRow(vec) #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{rrrr} #> Hello & \\textbf{World} & $\\alpha$ & $\\frac{1}{2}$ \\\\ #> \\end{tabular}  # basic numeric row: vec <- c(1.0, 1.01, 1.001) TexRow(vec) #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{rrr} #> 1.000 & 1.010 & 1.001 \\\\ #> \\end{tabular} TexRow(vec, dec = 2) # round to second decimal place #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{rrr} #> 1.00 & 1.01 & 1.00 \\\\ #> \\end{tabular}  # custom formatting of numbers using surround argument: vec = c(5.081, 2.345, 6.789) TexRow(vec, dec = 1, surround = \"{\\\\color{red} %s}\") #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{rrr} #> {\\color{red} 5.1} & {\\color{red} 2.3} & {\\color{red} 6.8} \\\\ #> \\end{tabular}  # use cspan argument to merge the second and third rows: vec = c(\"hello\", \"world\") TexRow(vec, cspan = c(1,2)) #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{rr} #> hello & \\multicolumn{2}{r}{world} \\\\ #> \\end{tabular} TexRow(vec, cspan = c(1,2), position = \"c\") # center merged columns #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{rr} #> hello & \\multicolumn{2}{c}{world} \\\\ #> \\end{tabular}  # concatenate blocks vertically or horizontally: block1 = TexRow(c(\"hello\",\"world\",\"block\")) block2 = TexRow(c(5.081, 2.345, 6.789), dec=1) block1 - block2 # horizontal #> Error in block1 - block2: non-numeric argument to binary operator block1 + block2 # vertical #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{rrr} #> hello & world & block \\\\ #> 5.1 & 2.3 & 6.8 \\\\ #> \\end{tabular}  # add 3pt of vertical space between two rows using the space argument: TexRow(c(\"hello\", \"world\"), space=3) + TexRow(c('$\\\\alpha$','$\\\\frac{1}{2}$')) #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{rr} #> hello & world \\\\[3pt] #> $\\alpha$ & $\\frac{1}{2}$ \\\\ #> \\end{tabular}"},{"path":"/reference/TexSave.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile a tabular object to a pdf file — TexSave","title":"Compile a tabular object to a pdf file — TexSave","text":"Compile tabular object pdf file","code":""},{"path":"/reference/TexSave.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile a tabular object to a pdf file — TexSave","text":"","code":"TexSave(   tab,   filename,   positions,   pretty_rules = TRUE,   output_path = getwd(),   stand_alone = FALSE,   compile_tex = FALSE )"},{"path":"/reference/TexSave.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile a tabular object to a pdf file — TexSave","text":"tab textab block, created TexRow(). filename (character). file saved filename.tex. positions (character). Vector positions, e.g., \"c(\"l\",\"c\",\"r\")\" means first column left-aligned, second column center-aligned, third column right-aligned. pretty_rules (logical). TRUE, extra formatting rules added bottom top tabular. output_path (character). directory path file saved. Default current directory. stand_alone (logical). TRUE, tabular exported .tex file can compiled PDF directly (rather included separate .tex file). Default FALSE. compile_tex (logical). TRUE stand_alone TRUE, pdflatex used compile TeX table PDF. allowed stand_alone=TRUE. Default FALSE.","code":""},{"path":"/reference/TexSave.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile a tabular object to a pdf file — TexSave","text":"list containing path .tex file name .tex file.","code":""},{"path":"/reference/TexSave.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compile a tabular object to a pdf file — TexSave","text":"","code":"# consider the following example textab object: tt = TexRow(c(\"hello\", \"world\")) + TexRow(c(1,2))  # define the positions for each column: pos = c(\"l\",\"c\")  # choose an output path: op = tempdir()  # Save a simple .tex document containing this table: TexSave(tab = tt, positions = pos, filename = \"example1\", output_path = op) #> $output_path #> [1] \"/var/folders/p5/yrc3_0n50sz7lc594dpkf25h0000gn/T//RtmpGqRcDg\" #>  #> $filename #> [1] \"example1.tex\" #>   # Save the .tex document as stand-alone, which includes LaTeX headers and packages: TexSave(tab = tt, positions = pos, filename = \"example2\", output_path = op, stand_alone = TRUE) #> $output_path #> [1] \"/var/folders/p5/yrc3_0n50sz7lc594dpkf25h0000gn/T//RtmpGqRcDg\" #>  #> $filename #> [1] \"example2.tex\" #>"},{"path":"/reference/dot-tt_.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate textab blocks horizontally (side-by-side). — -.tt_","title":"Concatenate textab blocks horizontally (side-by-side). — -.tt_","text":"Concatenate textab blocks horizontally (side--side).","code":""},{"path":"/reference/dot-tt_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate textab blocks horizontally (side-by-side). — -.tt_","text":"","code":"# S3 method for tt_ -(top_row, bottom_row)"},{"path":"/reference/dot-tt_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate textab blocks horizontally (side-by-side). — -.tt_","text":"top_row top tabular row. bottom_row bottom tabular row.","code":""},{"path":"/reference/dot-tt_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate textab blocks horizontally (side-by-side). — -.tt_","text":"block tabular, formed horizontally concatenating two provided blocks.","code":""},{"path":"/reference/plus-.tt_.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate textab blocks vertically. — +.tt_","title":"Concatenate textab blocks vertically. — +.tt_","text":"Concatenate textab blocks vertically.","code":""},{"path":"/reference/plus-.tt_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate textab blocks vertically. — +.tt_","text":"","code":"# S3 method for tt_ +(upper_block, lower_block)"},{"path":"/reference/plus-.tt_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate textab blocks vertically. — +.tt_","text":"upper_block upper block tabular row. lower_block lower block tabular row.","code":""},{"path":"/reference/plus-.tt_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate textab blocks vertically. — +.tt_","text":"block tabular, formed vertically concatenating two provided blocks.","code":""},{"path":"/reference/plus-.tt_.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate textab blocks vertically. — +.tt_","text":"","code":"# define some textab blocks first_block = TexRow(c(1,2)) first_block #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{rr} #> 1.000 & 2.000 \\\\ #> \\end{tabular}  second_block = TexRow(3) second_block #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{r} #> 3.000 \\\\ #> \\end{tabular}  third_block = TexRow(4) third_block #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{r} #> 4.000 \\\\ #> \\end{tabular}  # concatenate two blocks vertically first_block + second_block #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{rr} #> 1.000 & 2.000 \\\\ #> 3.000 \\\\ #> \\end{tabular}  # concatenate three blocks vertically first_block + second_block + third_block #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{rr} #> 1.000 & 2.000 \\\\ #> 3.000 \\\\ #> 4.000 \\\\ #> \\end{tabular}  # concatenate both horizontally and vertically # note: horizontal concatenation takes precedence over vertical concatenation first_block + second_block / third_block #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{rr} #> 1.000 & 2.000 \\\\ #> 3.000 & 4.000 \\\\ #> \\end{tabular}"},{"path":"/reference/print.tt_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a textab block as a LaTeX tabular. — print.tt_block","title":"Print a textab block as a LaTeX tabular. — print.tt_block","text":"Print textab block LaTeX tabular.","code":""},{"path":"/reference/print.tt_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a textab block as a LaTeX tabular. — print.tt_block","text":"","code":"# S3 method for tt_block print(x, ...)"},{"path":"/reference/print.tt_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a textab block as a LaTeX tabular. — print.tt_block","text":"x textab block. ... Placeholder print.","code":""},{"path":"/reference/print.tt_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a textab block as a LaTeX tabular. — print.tt_block","text":"Print prints argument returns invisibly.","code":""},{"path":"/reference/slash-.tt_.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate textab blocks horizontally (side-by-side). — /.tt_","title":"Concatenate textab blocks horizontally (side-by-side). — /.tt_","text":"Concatenate textab blocks horizontally (side--side).","code":""},{"path":"/reference/slash-.tt_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate textab blocks horizontally (side-by-side). — /.tt_","text":"","code":"# S3 method for tt_ /(left_block, right_block)"},{"path":"/reference/slash-.tt_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate textab blocks horizontally (side-by-side). — /.tt_","text":"left_block left block tabular row. right_block right block tabular row.","code":""},{"path":"/reference/slash-.tt_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate textab blocks horizontally (side-by-side). — /.tt_","text":"block tabular, formed horizontally concatenating two provided blocks.","code":""},{"path":"/reference/slash-.tt_.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate textab blocks horizontally (side-by-side). — /.tt_","text":"","code":"# define some textab blocks first_block = TexRow(c(1,2)) first_block #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{rr} #> 1.000 & 2.000 \\\\ #> \\end{tabular}  second_block = TexRow(3) second_block #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{r} #> 3.000 \\\\ #> \\end{tabular}  third_block = TexRow(4) third_block #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{r} #> 4.000 \\\\ #> \\end{tabular}  # concatenate two blocks horizontally first_block / second_block #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{rrr} #> 1.000 & 2.000 & 3.000 \\\\ #> \\end{tabular}  # concatenate three blocks horizontally first_block / second_block / third_block #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{rrrr} #> 1.000 & 2.000 & 3.000 & 4.000 \\\\ #> \\end{tabular}  # concatenate both horizontally and vertically # note: horizontal concatenation takes precedence over vertical concatenation first_block + second_block / third_block #> % created using textab on Sun Mar 26 18:47:02 2023 #> \\begin{tabular}{rr} #> 1.000 & 2.000 \\\\ #> 3.000 & 4.000 \\\\ #> \\end{tabular}"}]
